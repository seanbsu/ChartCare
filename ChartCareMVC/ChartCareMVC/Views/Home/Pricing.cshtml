@{
    var plansWithFeatures = ViewData["Plans"] as Dictionary<PricingPlan, List<Features>>;
    var allFeatures = plansWithFeatures?
                    .SelectMany(plan => plan.Value)
                    .Distinct()
                    .ToList()
                ?? new List<Features>();
    var cascadedPlans = ViewData["CascadedPlans"] as Dictionary<PricingPlan, List<Features>>;
    var orderedPlans = plansWithFeatures?
        .OrderBy(p => p.Key.ID)
        .ToList();


}

<svg xmlns="http://www.w3.org/2000/svg" class="d-none">
    <symbol id="check" viewBox="0 0 16 16">
        <title>Check</title>
        <path d="M13.854 3.646a.5.5 0 0 1 0 .708l-7 7a.5.5 0 0 1-.708 0l-3.5-3.5a.5.5 0 1 1 .708-.708L6.5 10.293l6.646-6.647a.5.5 0 0 1 .708 0z" />
    </symbol>
</svg>

<div class="container py-3">
    <div class="pricing-header p-3 pb-md-4 mx-auto text-center">
        <h1 class="display-4 fw-normal text-body-emphasis">Pricing</h1>
        <p class="fs-5 text-body-secondary">
            Discover the right plan tailored to your business. Whether you're a small or a well-established company, our flexible pricing options are designed to grow with you, offering the features and support you need to succeed at every stage.
        </p>
    </div>
    <main>
        <div class="row row-cols-1 row-cols-md-3 mb-3 text-center">
            @if (plansWithFeatures != null)
            {
                foreach (var plan in plansWithFeatures)
                {
                    <div class="col">
                        <div class="card mb-4 rounded-3 shadow-sm">
                            <div class="card-header py-3">
                                <h4 class="my-0 fw-normal">@plan.Key.PlanNameString</h4>
                            </div>
                            <div class="card-body">
                                <h1 class="card-title pricing-card-title">$@plan.Key.PlanPrice<small class="text-body-secondary fw-light">/mo</small></h1>
                                <ul class="list-unstyled mt-3 mb-4">
                                    @foreach (var feature in plan.Value)
                                    {
                                        <li>@(feature.AbbreviatedDescription ?? feature.Name)</li>
                                    }
                                </ul>
                                @if (plan.Key.ID > 1)
                                {
                                    <button type="button" class="w-100 btn btn-lg btn-primary">Get started</button>
                                }
                                else
                                {
                                    <button type="button" class="w-100 btn btn-lg btn-outline-primary">Sign up for free</button>
                                }

                            </div>
                        </div>
                    </div>
                }
            }
            else
            {
                <p class="fs-5 text-body-secondary"> No plans available. Please contact support.</p>
            }
        </div>

        <h2 class="display-6 text-center mb-4">Compare plans</h2>

        <div class="table-responsive">
            <table class="table text-center">
                <thead>
                    <tr>
                        <th style="width: 34%;"></th>
                        @if (orderedPlans != null)
                        {
                            foreach (var plan in orderedPlans)
                            {
                                <th style="width: 22%;">@plan.Key.PlanNameString</th>
                            }
                        }
                        else
                        {
                            <p class="fs-5 text-body-secondary"> No plans available. Please contact support.</p>
                        }
                    </tr>
                </thead>
                <tbody>
                    @if (orderedPlans != null)
                    {
                        <tr>
                            <th scope="row" class="text-start">Unlimited Employee Accounts</th>
                            @foreach (var plan in orderedPlans)
                            {
                                var employeeFeature = cascadedPlans[plan.Key].FirstOrDefault(f => f.Description.Contains("employee accounts"));

                                if (employeeFeature != null)
                                {
                                    if (employeeFeature.Description.Contains("No limit"))
                                    {
                                        <td><svg class="bi" width="24" height="24"><use xlink:href="#check" /></svg></td>
                                    }
                                    else
                                    {
                                        var match = System.Text.RegularExpressions.Regex.Match(employeeFeature.Description, @"\d+");
                                        if (match.Success)
                                        {
                                            var employeeCount = match.Value;
                                            <td>@employeeCount employees</td>
                                        }
                                        else
                                        {
                                            <td>N/A</td>
                                        }
                                    }
                                }
                                else
                                {
                                    <td>N/A</td>
                                }
                            }
                        </tr>

                        @foreach (var feature in allFeatures.Where(f => !f.Description.Contains("employee accounts")))
                        {
                            <tr>
                                <th scope="row" class="text-start">@feature.Name</th>
                                @foreach (var plan in orderedPlans)
                                {
                                    var currentFeature = cascadedPlans[plan.Key].FirstOrDefault(f => f.ID == feature.ID);

                                    if (currentFeature != null)
                                    {
                                        <td><svg class="bi" width="24" height="24"><use xlink:href="#check" /></svg></td>
                                    }
                                    else
                                    {
                                        <td></td>
                                    }
                                }
                            </tr>
                        }
                    }
                </tbody>
            </table>
        </div>

    </main>
</div>
