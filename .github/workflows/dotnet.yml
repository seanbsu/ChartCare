name: .NET

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      sqlserver:
        image: mcr.microsoft.com/mssql/server:2019-latest
        env:
          SA_PASSWORD: YourStrong!Passw0rd
          ACCEPT_EULA: "Y"
        ports:
          - 1433:1433
        options: --health-cmd "echo 'SQL Server container is running'" --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
    - uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    - name: Install dotnet-ef tool
      run: dotnet tool install --global dotnet-ef --version 8.*

    - name: Restore dependencies
      run: dotnet restore ChartCareMVC/ChartCareMVC.sln --use-lock-file

    - name: Build
      run: dotnet build ChartCareMVC/ChartCareMVC.sln --no-restore

    - name: Verify dotnet-ef installation
      run: |
        echo "Checking for dotnet-ef tool..."
        dotnet tool list --global
        which dotnet-ef || echo "dotnet-ef not found"
        echo "PATH: $PATH"

    - name: Check Project Files
      run: |
        echo "Current directory:"
        pwd
        echo "Listing files in ChartCareMVC directory:"
        ls -R ChartCareMVC || echo "ls command not found"

    - name: Apply Database Migrations
      env:
        ConnectionStrings__CompanyDbContextConnection: 'Server=localhost,1433;Database=ChartCareMVC;User Id=sa;Password=YourStrong!Passw0rd;'
      run: |
        echo "Applying database migrations..."
        dotnet /home/runner/.dotnet/tools/dotnet-ef database update --project ChartCareMVC/ChartCareMVC.csproj --startup-project ChartCareMVC/ChartCareMVC.csproj

    - name: Run Tests
      env:
        ConnectionStrings__CompanyDbContextConnection: 'Server=localhost,1433;Database=ChartCareMVC;User Id=sa;Password=YourStrong!Passw0rd;'
      run: dotnet test ChartCareMVC/MVC-Tests/MVC-Tests.csproj --no-build --verbosity normal
