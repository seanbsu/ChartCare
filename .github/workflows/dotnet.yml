name: .NET

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      sqlserver:
        image: mcr.microsoft.com/mssql/server:2019-latest
        env:
          SA_PASSWORD: YourStrong!Passw0rd
          ACCEPT_EULA: "Y"
        ports:
          - 1433:1433
        #options: --health-cmd "echo 'SQL Server container is running'" --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
    - uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    - name: Install dotnet-ef tool
      run: dotnet tool install --global dotnet-ef --version 8.*

    - name: Restore dependencies
      run: dotnet restore ChartCareMVC/ChartCareMVC.sln --use-lock-file

    - name: Build
      run: dotnet build ChartCareMVC/ChartCareMVC.sln --no-restore
      
    - name: Wait for SQL Server to be ready
      run: |
        echo "Waiting for SQL Server to be ready..."
        for i in {1..30}; do
          if /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P YourStrong!Passw0rd -Q "SELECT 1" > /dev/null; then
            echo "SQL Server is up and running."
            break
          fi
          echo "SQL Server is still starting, waiting 5 seconds..."
          sleep 5
        done
        
    - name: Apply Database Migrations
      env:
        ConnectionStrings__CompanyDbContextConnection: 'Data Source=localhost,1433;Database=ChartCareMVC;User Id=sa;Password=YourStrong!Passw0rd;TrustServerCertificate=True;'
      run: |
        echo "Applying database migrations..."
        dotnet-ef database update --project ChartCareMVC/ChartCareData/ChartCareMVC.csproj


    - name: Run Tests
      env:
        ConnectionStrings__CompanyDbContextConnection: 'Data Source=localhost,1433;Database=ChartCareMVC;User Id=sa;Password=YourStrong!Passw0rd;TrustServerCertificate=True;'
      run: dotnet test ChartCareMVC/MVC-Tests/MVC-Tests.csproj --no-build --verbosity normal
